h1. The Secret Ingredients of Ruby

This is material we're preparing for an all-day pre-conference charity tutorial for "Scotland on Rails":http://scotlandonrails.com to benefit the "Children's Hospice Association of Scotland":http://www.chas.org.uk/. 

h1. Contents

These things make Ruby special. They aren't "advanced". They're fundamental:


# Blocks/closures
# Object-oriented vs. class-oriented (classes are less important than other languages, using mixins instead of inheritance, etc.)
# Class definitions are active (method calls in class scope, etc.)
# Hooks, callbacks, and reflection


Each of these four areas has an exercise and a homework project. The exercise is something that can be done in 30 minutes at the tutorial. The homework project is harder and probably involves reading some specific code.

h2. Blocks and closures

_Exercise_: The closures for storing state thing checked into git repo?

_Extra Credit_: Something harder than the exercise

_Homework_:


h2. Object Orientation and Mixins

_Exercise_: Module bundles

_Extra Credit_: Something harder than the exercise

_Homework_: 

h2. Class definitions are active

_Exercise_: Implement has_many, belongs_to, and has_many :through for plain ol' Ruby objects

_Extra Credit_: My file db example?

_Homework_:

h2. Hooks, callbacks, and reflection

_Exercise_: OpenConst (const_missing + OpenStruct)?

_Extra Credit_: Something harder than the exercise

_Homework_:


h1. Authors

* Marcel Molina, Jr.
* Chad Fowler

h1. Thanks

* Mike Clark contributed ideas for the structure of the tutorial
* Dave Thomas taught Chad a lot of this stuff
* Alan Francis roped us into doing this tutorial and organized the conference